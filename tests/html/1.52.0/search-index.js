var searchIndex = JSON.parse('{\
"anyhow":{"doc":"github crates-io docs-rs","t":[3,3,6,8,10,10,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","Chain","Result","Context","context","with_context","bail","ensure","anyhow","from","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","drop","as_ref","as_ref","from","next_back","len","next","size_hint","clone","default","deref","deref_mut","fmt","fmt","new","new","msg","context","chain","root_cause","is","downcast","downcast_ref","downcast_mut"],"q":["anyhow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The <code>Error</code> type, a wrapper around a dynamic error type.","Iterator of a chain of source errors.","<code>Result<T, Error></code>","Provides the <code>context</code> method for <code>Result</code>.","Wrap the error value with additional context.","Wrap the error value with additional context that is …","Return early with an error.","Return early with an error if a condition is not …","Construct an ad-hoc error from a string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new error object from any error type.","Create a new error object from a printable error message.","Wrap the error value with additional context.","An iterator of the chain of source errors contained by …","The lowest level cause of this error — this error’s …","Returns true if <code>E</code> is the type held by this error object.","Attempt to downcast the error object to a concrete type.","Downcast this error object by reference.","Downcast this error object by mutable reference."],"i":[0,0,0,0,1,1,0,0,0,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,3,3,2,2,2,2,3,2,2,2,2,2,2,2,2,2],"f":[null,null,null,null,[[],[["error",3],["result",6]]],[[],[["error",3],["result",6]]],null,null,null,[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["stderror",8]],[[],["stderror",8]],[[]],[[],["option",4]],[[],["usize",15]],[[],["option",4]],[[]],[[],["chain",3]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["stderror",8]]],[[]],[[]],[[]],[[],["chain",3]],[[],["stderror",8]],[[],["bool",15]],[[],["result",4]],[[],["option",4]],[[],["option",4]]],"p":[[8,"Context"],[3,"Error"],[3,"Chain"]]},\
"kuchiki":{"doc":"Kuchiki (朽木), a HTML/XML tree manipulation library …","t":[0,3,3,3,4,13,13,3,3,12,3,12,3,12,3,12,12,8,11,11,11,11,8,11,0,8,10,10,16,10,11,11,11,11,3,12,12,3,12,3,12,12,3,5,5,3,12,12,12,3,3,12,3,3,12,12,12,3,3,12,12,12,3,4,13,13,13,13,13,13,13,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["iter","Siblings","Ancestors","Descendants","NodeEdge","Start","End","Traverse","Elements","0","Comments","0","TextNodes","0","Select","iter","selectors","NodeIterator","elements","text_nodes","comments","select","ElementIterator","select","traits","TendrilSink","process","error","Output","finish","one","from_iter","read_from","from_file","Attribute","prefix","value","Attributes","map","ExpandedName","ns","local","NodeDataRef","parse_html","parse_html_with_options","ParseOpts","tokenizer","tree_builder","on_parse_error","Selector","Selectors","0","Specificity","Doctype","name","public_id","system_id","DocumentData","ElementData","name","attributes","template_contents","Node","NodeData","Element","Text","Comment","ProcessingInstruction","Doctype","Document","DocumentFragment","NodeRef","0","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","drop","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next","next","next","next","next","next","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","partial_cmp","partial_cmp","to_string","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","from_str","serialize","opaque","is_html_slot_element","parent_node_is_shadow_root","containing_shadow_host","parent_element","prev_sibling_element","next_sibling_element","is_empty","is_root","is_html_element_in_html_document","has_local_name","has_namespace","is_part","exported_part","imported_part","is_pseudo_element","is_same_type","is_link","has_id","has_class","attr_matches","match_pseudo_element","match_non_ts_pseudo_class","new","contains","get","get_mut","entry","insert","remove","inclusive_ancestors","ancestors","inclusive_preceding_siblings","preceding_siblings","inclusive_following_siblings","following_siblings","children","inclusive_descendants","descendants","traverse_inclusive","traverse","select","select_first","into_element_ref","into_text_ref","into_comment_ref","into_doctype_ref","into_document_ref","new","new_opt","as_node","text_contents","compile","matches","filter","matches","specificity","serialize","serialize_to_file","quirks_mode","new","new_element","new_text","new_comment","new_processing_instruction","new_doctype","new_document","text_contents","data","as_element","as_text","as_comment","as_doctype","as_document","parent","first_child","last_child","previous_sibling","next_sibling","detach","append","prepend","insert_after","insert_before"],"q":["kuchiki","kuchiki::iter","","","","","","","","","","","","","","","","","","","","","","","kuchiki","kuchiki::traits","","","","","","","","","kuchiki","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kuchiki::iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kuchiki","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kuchiki::iter","","","","","","","","","","","","","","","kuchiki","","","kuchiki::iter","","","","","","","","kuchiki","","","","","","","","","","","","","","","","kuchiki::iter","","kuchiki","","","","","","","","","","","","","","","","","","","","kuchiki::iter","","","","","","","","kuchiki","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Node iterators","A double-ended iterator of sibling nodes.","An iterator on ancestor nodes.","An iterator of references to a given node and its …","Marks either the start or the end of a node.","Indicates that start of a node that has children. Yielded …","Indicates that end of a node that has children. Yielded …","An iterator of the start and end edges of the nodes in a …","A node iterator adaptor that yields element nodes.","","A node iterator adaptor that yields comment nodes.","","A node iterator adaptor that yields text nodes.","","An element iterator adaptor that yields elements maching …","The underlying iterator.","The selectors to be matched.","Convenience methods for node iterators.","Filter this element iterator to elements.","Filter this node iterator to text nodes.","Filter this node iterator to comment nodes.","Filter this node iterator to elements maching the given …","Convenience methods for element iterators.","Filter this element iterator to elements maching the …","This module re-exports a number of traits that are useful …","Trait for types that can process a tendril.","Process this tendril.","Indicates that an error has occurred.","What the overall result of processing is.","Indicates the end of the stream.","Process one tendril and finish.","Consume an iterator of tendrils, processing each item, …","Read from the given stream of bytes until exhaustion and …","Read from the file at the given path and process …","The non-identifying parts of an attribute","The namespace prefix, if any","The attribute value","Convenience wrapper around a btreemap that adds method …","A map of attributes whose name can have namespaces.","https://www.w3.org/TR/REC-xml-names/#dt-expname","Namespace URL","“Local” part of the name","Holds a strong reference to a node, but dereferences to …","Parse an HTML document with html5ever and the default …","Parse an HTML document with html5ever with custom …","Options for the HTML parser.","Options for the HTML tokenizer.","Options for the HTML tree builder.","A callback for HTML parse errors (which are never fatal).","A pre-compiled CSS Selector.","A pre-compiled list of CSS Selectors.","","The specificity of a selector.","Data specific to doctype nodes.","The name of the doctype","The public ID of the doctype","The system ID of the doctype","Data specific to document nodes.","Data specific to element nodes.","The namespace and local name of the element, such as …","The attributes of the elements.","If the element is an HTML <code><template></code> element, the …","A node inside a DOM-like tree.","Node data specific to the node type.","Element node","Text node","Comment node","Processing instruction node","Doctype node","Document node","Document fragment node","A strong reference to a noderivial constructor","Like BTreeMap::contains","Like BTreeMap::get","Like BTreeMap::get_mut","Like BTreeMap::entry","Like BTreeMap::insert","Like BTreeMap::remove","Return an iterator of references to this node and its …","Return an iterator of references to this node’s …","Return an iterator of references to this node and the …","Return an iterator of references to this node’s …","Return an iterator of references to this node and the …","Return an iterator of references to this node’s …","Return an iterator of references to this node’s …","Return an iterator of references to this node and its …","Return an iterator of references to this node’s …","Return an iterator of the start and end edges of this …","Return an iterator of the start and end edges of this …","Return an iterator of the inclusive descendants element …","Return the first inclusive descendants element that match …","If this node is an element, return a strong reference to …","If this node is a text node, return a strong reference to …","If this node is a comment, return a strong reference to …","If this node is a doctype, return a strong reference to …","If this node is a document, return a strong reference to …","Create a <code>NodeDataRef</code> for a component in a given node.","Create a <code>NodeDataRef</code> for and a component that may or may …","Access the corresponding node.","Return the concatenation of all text nodes in this …","Compile a list of selectors. This may fail on syntax …","Returns whether the given element matches this list of …","Filter an element iterator, yielding those matching this …","Returns whether the given element matches this selector.","Return the specificity of this selector.","Serialize this node and its descendants in HTML syntax to …","Serialize this node and its descendants in HTML syntax to …","The quirks mode of the document, as determined by the …","Create a new node.","Create a new element node.","Create a new text node.","Create a new comment node.","Create a new processing instruction node.","Create a new doctype node.","Create a new document node.","Return the concatenation of all text nodes in this …","Return a reference to this node’s node-type-specific …","If this node is an element, return a reference to …","If this node is a text node, return a reference to its …","If this node is a comment, return a reference to its …","If this node is a document, return a reference to …","If this node is a document, return a reference to …","Return a reference to the parent node, unless this node …","Return a reference to the first child of this node, …","Return a reference to the last child of this node, unless …","Return a reference to the previous sibling of this node, …","Return a reference to the previous sibling of this node, …","Detach a node from its parent and siblings. Children are …","Append a new child to this node, after existing children.","Prepend a new child to this node, before existing …","Insert a new sibling after this node.","Insert a new sibling before this node."],"i":[0,0,0,0,0,1,1,0,0,2,0,3,0,4,0,5,5,0,6,6,6,6,0,7,0,0,8,8,8,8,8,8,8,8,0,9,9,0,10,0,11,11,0,0,0,0,12,12,12,0,0,13,0,0,14,14,14,0,0,15,15,15,0,0,16,16,16,16,16,16,16,0,17,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,1,1,1,1,1,1,1,1,1,21,21,21,21,21,21,21,21,21,21,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,22,22,22,22,22,22,22,22,22,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,16,16,16,16,16,16,16,16,16,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,25,25,25,25,25,25,25,25,25,17,17,17,17,17,17,17,17,17,26,26,26,26,26,26,26,26,18,20,21,2,3,4,5,18,19,20,21,2,3,4,5,10,11,9,18,19,20,1,21,2,3,4,22,24,16,14,15,25,17,12,11,24,10,10,11,11,9,9,1,1,22,24,24,16,16,14,14,15,15,25,25,17,11,24,17,22,17,10,11,9,18,19,20,1,21,2,3,4,22,23,13,16,14,15,25,17,26,23,13,11,24,13,17,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,11,10,10,10,10,10,10,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,22,22,22,22,13,13,13,23,23,17,17,25,17,17,17,17,17,17,17,17,26,26,26,26,26,26,26,26,26,26,26,26,17,17,17,17],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["elements",3]],[[],["textnodes",3]],[[],["comments",3]],[[["str",15]],[["result",4],["select",3]]],null,[[["str",15]],[["result",4],["select",3]]],null,null,[[["tendril",3]]],[[["str",15],["cow",4]]],null,[[]],[[]],[[]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],null,null,null,null,null,null,null,null,null,[[],[["parser",3],["sink",3]]],[[["parseopts",3]],[["parser",3],["sink",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["nodeedge",4],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["nodeedge",4],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],["attributes",3]],[[],["expandedname",3]],[[],["attribute",3]],[[],["siblings",3]],[[],["ancestors",3]],[[],["descendants",3]],[[],["nodeedge",4]],[[],["traverse",3]],[[],["elements",3]],[[],["comments",3]],[[],["textnodes",3]],[[]],[[],["specificity",3]],[[],["nodedata",4]],[[],["doctype",3]],[[],["elementdata",3]],[[],["documentdata",3]],[[],["noderef",3]],[[],["parseopts",3]],[[["expandedname",3]],["ordering",4]],[[["specificity",3]],["ordering",4]],[[["attributes",3]],["bool",15]],[[["attributes",3]],["bool",15]],[[["expandedname",3]],["bool",15]],[[["expandedname",3]],["bool",15]],[[["attribute",3]],["bool",15]],[[["attribute",3]],["bool",15]],[[["nodeedge",4]],["bool",15]],[[["nodeedge",4]],["bool",15]],[[],["bool",15]],[[["specificity",3]],["bool",15]],[[["specificity",3]],["bool",15]],[[["nodedata",4]],["bool",15]],[[["nodedata",4]],["bool",15]],[[["doctype",3]],["bool",15]],[[["doctype",3]],["bool",15]],[[["elementdata",3]],["bool",15]],[[["elementdata",3]],["bool",15]],[[["documentdata",3]],["bool",15]],[[["documentdata",3]],["bool",15]],[[["noderef",3]],["bool",15]],[[["expandedname",3]],[["ordering",4],["option",4]]],[[["specificity",3]],[["ordering",4],["option",4]]],[[],["string",3]],[[]],[[],["node",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],[["selectors",3],["result",4]]],[[["traversalscope",4]],["result",6]],[[],["opaqueelement",3]],[[],["bool",15]],[[],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["localname",6]],["bool",15]],[[["namespace",6]],["bool",15]],[[["localname",6]],["bool",15]],[[["localname",6]],[["option",4],["localname",6]]],[[["localname",6]],[["option",4],["localname",6]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["localname",6],["casesensitivity",4]],["bool",15]],[[["localname",6],["casesensitivity",4]],["bool",15]],[[["localname",6],["namespaceconstraint",4],["attrselectoroperation",4]],["bool",15]],[[["matchingcontext",3],["pseudoelement",4]],["bool",15]],[[["matchingcontext",3],["pseudoclass",4]],["bool",15]],[[["namespace",6],["into",8],["localname",6],["into",8]]],[[["localname",6],["into",8]],["bool",15]],[[["localname",6],["into",8]],[["option",4],["str",15]]],[[["localname",6],["into",8]],[["option",4],["string",3]]],[[["localname",6],["into",8]],[["attribute",3],["entry",4],["expandedname",3]]],[[["string",3],["localname",6],["into",8]],[["attribute",3],["option",4]]],[[["localname",6],["into",8]],[["attribute",3],["option",4]]],[[],["ancestors",3]],[[],["ancestors",3]],[[],[["rev",3],["siblings",3]]],[[],[["rev",3],["siblings",3]]],[[],["siblings",3]],[[],["siblings",3]],[[],["siblings",3]],[[],["descendants",3]],[[],["descendants",3]],[[],["traverse",3]],[[],["traverse",3]],[[["str",15]],[["select",3],["result",4]]],[[["str",15]],[["result",4],["nodedataref",3]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["nodedataref",3],["option",4]]],[[],[["option",4],["nodedataref",3]]],[[],[["nodedataref",3],["option",4]]],[[["noderef",3]],["nodedataref",3]],[[["noderef",3]],[["nodedataref",3],["option",4]]],[[],["noderef",3]],[[],["string",3]],[[["str",15]],[["selectors",3],["result",4]]],[[["nodedataref",3]],["bool",15]],[[],[["select",3],["selectors",3]]],[[["nodedataref",3]],["bool",15]],[[],["specificity",3]],[[],["result",6]],[[["asref",8],["path",3]],["result",6]],[[],["quirksmode",4]],[[["nodedata",4]],["noderef",3]],[[["qualname",3]],["noderef",3]],[[["into",8],["string",3]],["noderef",3]],[[["into",8],["string",3]],["noderef",3]],[[],["noderef",3]],[[],["noderef",3]],[[],["noderef",3]],[[],["string",3]],[[],["nodedata",4]],[[],[["option",4],["elementdata",3]]],[[],[["refcell",3],["option",4]]],[[],[["refcell",3],["option",4]]],[[],[["option",4],["doctype",3]]],[[],[["documentdata",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[],[["noderef",3],["option",4]]],[[]],[[["noderef",3]]],[[["noderef",3]]],[[["noderef",3]]],[[["noderef",3]]]],"p":[[4,"NodeEdge"],[3,"Elements"],[3,"Comments"],[3,"TextNodes"],[3,"Select"],[8,"NodeIterator"],[8,"ElementIterator"],[8,"TendrilSink"],[3,"Attribute"],[3,"Attributes"],[3,"ExpandedName"],[3,"ParseOpts"],[3,"Selectors"],[3,"Doctype"],[3,"ElementData"],[4,"NodeData"],[3,"NodeRef"],[3,"Siblings"],[3,"Ancestors"],[3,"Descendants"],[3,"Traverse"],[3,"NodeDataRef"],[3,"Selector"],[3,"Specificity"],[3,"DocumentData"],[3,"Node"]]},\
"log":{"doc":"A lightweight logging facade.","t":[4,13,13,13,13,13,11,11,4,13,13,13,13,13,13,11,11,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,3,11,11,11,11,8,10,10,10,5,5,5,5,5,3,3,5,17,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Level","Error","Warn","Info","Debug","Trace","max","to_level_filter","LevelFilter","Off","Error","Warn","Info","Debug","Trace","max","to_level","Record","builder","args","metadata","level","target","module_path","module_path_static","file","file_static","line","RecordBuilder","new","args","metadata","level","target","module_path","module_path_static","file","file_static","line","build","Metadata","builder","level","target","MetadataBuilder","new","level","target","build","Log","enabled","log","flush","set_max_level","max_level","set_boxed_logger","set_logger","set_logger_racy","SetLoggerError","ParseLevelError","logger","STATIC_MAX_LEVEL","log","error","warn","info","debug","trace","log_enabled","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","clone","clone","clone","clone","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","lt","le","gt","ge","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","from_str","from_str"],"q":["logd":["An enum representing the available verbosity levels of …","The “error” level.","The “warn” level.","The “info” level.","The “debug” level.","The “trace” level.","Returns the most verbose logging level.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","An enum representing the available verbosity level …","A level lower than all log levels.","Corresponds to the <code>Error</code> log level.","Corresponds to the <code>Warn</code> log level.","Corresponds to the <code>Info</code> log level.","Corresponds to the <code>Debug</code> log level.","Corresponds to the <code>Trace</code> log level.","Returns the most verbose logging level filter.","Converts <code>self</code> to the equivalent <code>Level</code>.","The “payload” of a log message.","Returns a new builder.","The message body.","Metadata about the log directive.","The verbosity level of the message.","The name of the target of the directive.","The module path of the message.","The module path of the message, if it is a <code>\'static</code> string.","The source file containing the message.","The module path of the message, if it is a <code>\'static</code> string.","The line containing the message.","Builder for <code>Record</code>.","Construct new <code>RecordBuilder</code>.","Set <code>args</code>.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","Set <code>Metadata::level</code>.","Set <code>Metadata::target</code>","Set <code>module_path</code>","Set <code>module_path</code> to a <code>\'static</code> string","Set <code>file</code>","Set <code>file</code> to a <code>\'static</code> string.","Set <code>line</code>","Invoke the builder and return a <code>Record</code>","Metadata about a log message.","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","Builder for <code>Metadata</code>.","Construct a new <code>MetadataBuilder</code>.","Setter for <code>level</code>.","Setter for <code>target</code>.","Returns a <code>Metadata</code> object.","A trait encapsulating the operations required of a logger.","Determines if a log message with the specified metadata …","Logs the <code>Record</code>.","Flushes any buffered records.","Sets the global maximum log level.","Returns the current maximum log level.","Sets the global logger to a <code>Box<Log></code>.","Sets the global logger to a <code>&\'static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The type returned by <code>from_str</code> when the string doesn’t …","Returns a reference to the logger.","The statically resolved maximum log level.","The standard logging macro.","Logs a message at the error level.","Logs a message at the warn level.","Logs a message at the info level.","Logs a message at the debug level.","Logs a message at the trace level.","Determines if a message logged at the specified level in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,0,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,0,6,6,6,6,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,1,2,3,5,1,2,5,6,1,1,2,2,5,5,6,6,9,9,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,5,6,1,2,3,4,5,6,8,9,1,2,8,9,1,2,5,6,1,2],"f":[null,null,null,null,null,null,[[],["level",4]],[[],["levelfilter",4]],null,null,null,null,null,null,null,[[],["levelfilter",4]],[[],[["level",4],["option",4]]],null,[[],["recordbuilder",3]],[[],["arguments",3]],[[],["metadata",3]],[[],["level",4]],[[],["str",15]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],[["option",4],["str",15]]],[[],[["str",15],["option",4]]],[[],[["u32",15],["option",4]]],null,[[],["recordbuilder",3]],[[["arguments",3]],["recordbuilder",3]],[[["metadata",3]],["recordbuilder",3]],[[["level",4]],["recordbuilder",3]],[[["str",15]],["recordbuilder",3]],[[["option",4],["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["option",4],["str",15]],["recordbuilder",3]],[[["str",15],["option",4]],["recordbuilder",3]],[[["u32",15],["option",4]],["recordbuilder",3]],[[],["record",3]],null,[[],["metadatabuilder",3]],[[],["level",4]],[[],["str",15]],null,[[],["metadatabuilder",3]],[[["level",4]],["metadatabuilder",3]],[[["str",15]],["metadatabuilder",3]],[[],["metadata",3]],null,[[["metadata",3]],["bool",15]],[[["record",3]]],[[]],[[["levelfilter",4]]],[[],["levelfilter",4]],[[["box",3],["log",8]],[["result",4],["setloggererror",3]]],[[["log",8]],[["result",4],["setloggererror",3]]],[[["log",8]],[["result",4],["setloggererror",3]]],null,null,[[],["log",8]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["level",4]],[[],["levelfilter",4]],[[],["record",3]],[[],["metadata",3]],[[["level",4]],["ordering",4]],[[["levelfilter",4]],["ordering",4]],[[["metadata",3]],["ordering",4]],[[["metadatabuilder",3]],["ordering",4]],[[["level",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadata",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["metadatabuilder",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["parselevelerror",3]],["bool",15]],[[["level",4]],[["option",4],["ordering",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],[["option",4],["ordering",4]]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["levelfilter",4]],["bool",15]],[[["level",4]],[["option",4],["ordering",4]]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["level",4]],["bool",15]],[[["metadata",3]],[["ordering",4],["option",4]]],[[["metadatabuilder",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],[["level",4],["result",4]]],[[["str",15]],[["result",4],["levelfilter",4]]]],"p":[[4,"Level"],[4,"LevelFilter"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[8,"Log"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"rand_core":{"doc":"Random number generation traits","t":[0,8,16,16,10,3,12,11,11,11,11,3,12,11,11,11,11,0,5,5,5,5,5,5,0,5,5,3,3,8,10,10,10,10,8,8,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11],"n":["block","BlockRngCore","Item","Results","generate","BlockRng","core","new","index","reset","generate_and_set","BlockRng64","core","new","index","reset","generate_and_set","impls","next_u64_via_u32","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","le","read_u32_into","read_u64_into","Error","OsRng","RngCore","next_u32","next_u64","fill_bytes","try_fill_bytes","CryptoRng","SeedableRng","Seed","from_seed","seed_from_u64","from_rng","from_entropy","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","next_u32","next_u64","fill_bytes","try_fill_bytes","from_seed","seed_from_u64","from_rng","from_seed","seed_from_u64","from_rng","from","from","clone","clone","clone","default","fmt","fmt","fmt","fmt","fmt","source","read","new","inner","take_inner","INTERNAL_START","CUSTOM_START","raw_os_error","code"],"q":["rand_core","rand_core::block","","","","","","","","","","","","","","","","rand_core","rand_core::impls","","","","","","rand_core","rand_core::le","","rand_core","","","","","","","","","","","","","","","","","","","","","","rand_core::block","","","","","","","","","","","","","","","","","","rand_core","","","","","","","","","rand_core::block","","","","","","","","rand_core","","","","rand_core::block","","","","","","rand_core","","rand_core::block","","rand_core","","","rand_core::block","","rand_core","","","","","","","","","",""],"d":["The <code>BlockRngCore</code> trait and implementation helpers","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","Generate a new block of results.","A wrapper type implementing [<code>RngCore</code>] for some type …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","Create a new <code>BlockRng</code> from an existing RNG implementing …","Get the index into the result buffer.","Reset the number of available results. This will force a …","Generate a new set of results immediately, setting the …","A wrapper type implementing [<code>RngCore</code>] for some type …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","Create a new <code>BlockRng</code> from an existing RNG implementing …","Get the index into the result buffer.","Reset the number of available results. This will force a …","Generate a new set of results immediately, setting the …","Helper functions for implementing <code>RngCore</code> functions.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Little-Endian utilities","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>. …","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>. …","Error type of random number generators","A random number generator that retrieves randomness from …","The core of a random number generator.","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Fill <code>dest</code> with random data.","Fill <code>dest</code> entirely with random data.","A marker trait used to indicate that an [<code>RngCore</code>] or …","A random number generator that can be explicitly seeded.","Seed type, which is restricted to types …","Create a new PRNG using the given seed.","Create a new PRNG using a <code>u64</code> seed.","Create a new PRNG seeded from another <code>Rng</code>.","Creates a new instance of the RNG seeded via <code>getrandom</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct from any type supporting <code>std::error::Error</code>","Reference the inner error (<code>std</code> only)","Unwrap the inner error (<code>std</code> only)","Codes below this point represent OS Errors (i.e. positive …","Codes at or above this point can be used by users to …","Extract the raw OS error code (if this error came from …","Retrieve the error code, if any."],"i":[0,0,1,1,1,0,2,2,2,2,2,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,5,5,5,5,5,6,6,6,6,6,6,6,6,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,7,7,7,7,7,7,7,7,7,2,2,2,2,3,3,3,3,7,7,7,7,2,2,2,3,3,3,6,6,2,3,7,7,6,2,3,7,6,6,4,6,6,6,6,6,6,6],"f":[null,null,null,null,[[]],null,null,[[],["blockrng",3]],[[],["usize",15]],[[]],[[["usize",15]]],null,null,[[],["blockrng64",3]],[[],["usize",15]],[[]],[[["usize",15]]],null,[[],["u64",15]],[[]],[[]],[[]],[[],["u32",15]],[[],["u64",15]],null,[[]],[[]],null,null,null,[[],["u32",15]],[[],["u64",15]],[[]],[[],[["result",4],["error",3]]],null,null,null,[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["result",4],["error",3]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["result",4],["error",3]]],[[],["u32",15]],[[],["u64",15]],[[]],[[],[["result",4],["error",3]]],[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[]],[[["u64",15]]],[[["rngcore",8]],[["error",3],["result",4]]],[[["nonzerou32",3]]],[[["error",3]]],[[],["blockrng",3]],[[],["blockrng64",3]],[[],["osrng",3]],[[],["osrng",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],[["option",4],["error",8]]],[[],[["usize",15],["result",4],["error",3]]],[[]],[[],["error",8]],[[],[["error",8],["box",3]]],null,null,[[],[["option",4],["i32",15]]],[[],[["option",4],["nonzerou32",3]]]],"p":[[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"],[3,"Error"],[3,"OsRng"]]}\
}');
initSearch(searchIndex);