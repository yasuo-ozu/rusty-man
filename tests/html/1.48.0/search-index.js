var searchIndex = JSON.parse('{\
"anyhow":{"doc":"github crates-io docs-rs","i":[[3,"Error","anyhow","The `Error` type, a wrapper around a dynamic error type.",null,null],[3,"Chain","","Iterator of a chain of source errors.",null,null],[11,"new","","",0,[[["stderror",8]]]],[11,"new","","Create a new error object from any error type.",1,[[]]],[11,"msg","","Create a new error object from a printable error message.",1,[[]]],[11,"context","","Wrap the error value with additional context.",1,[[]]],[11,"chain","","An iterator of the chain of source errors contained by…",1,[[],["chain",3]]],[11,"root_cause","","The lowest level cause of this error — this error\'s…",1,[[],["stderror",8]]],[11,"is","","Returns true if `E` is the type held by this error object.",1,[[]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",1,[[],["result",4]]],[11,"downcast_ref","","Downcast this error object by reference.",1,[[],["option",4]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",1,[[],["option",4]]],[6,"Result","","`Result<T, Error>`",null,null],[8,"Context","","Provides the `context` method for `Result`.",null,null],[10,"context","","Wrap the error value with additional context.",2,[[],[["result",6],["error",3]]]],[10,"with_context","","Wrap the error value with additional context that is…",2,[[],[["result",6],["error",3]]]],[14,"bail","","Return early with an error.",null,null],[14,"ensure","","Return early with an error if a condition is not satisfied.",null,null],[14,"anyhow","","Construct an ad-hoc error from a string.",null,null],[11,"from","","",1,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"into_iter","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"as_ref","","",1,[[],["stderror",8]]],[11,"from","","",1,[[]]],[11,"next_back","","",0,[[],["option",4]]],[11,"len","","",0,[[]]],[11,"next","","",0,[[],["option",4]]],[11,"size_hint","","",0,[[]]],[11,"clone","","",0,[[],["chain",3]]],[11,"default","","",0,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[3,"Chain"],[3,"Error"],[8,"Context"]]},\
"kuchiki":{"doc":"Kuchiki (朽木), a HTML/XML tree manipulation library for Rust.","i":[[3,"Attribute","kuchiki","The non-identifying parts of an attribute",null,null],[12,"prefix","","The namespace prefix, if any",0,null],[12,"value","","The attribute value",0,null],[3,"Attributes","","Convenience wrapper around a btreemap that adds method for…",null,null],[12,"map","","A map of attributes whose name can have namespaces.",1,null],[3,"ExpandedName","","https://www.w3.org/TR/REC-xml-names/#dt-expname",null,null],[12,"ns","","Namespace URL",2,null],[12,"local","","\\\"Local\\\" part of the name",2,null],[3,"NodeDataRef","","Holds a strong reference to a node, but dereferences to…",null,null],[3,"ParseOpts","","Options for the HTML parser.",null,null],[12,"tokenizer","","Options for the HTML tokenizer.",3,null],[12,"tree_builder","","Options for the HTML tree builder.",3,null],[12,"on_parse_error","","A callback for HTML parse errors (which are never fatal).",3,null],[3,"Selector","","A pre-compiled CSS Selector.",null,null],[3,"Selectors","","A pre-compiled list of CSS Selectors.",null,null],[12,"0","","",4,null],[3,"Specificity","","The specificity of a selector.",null,null],[3,"Doctype","","Data specific to doctype nodes.",null,null],[12,"name","","The name of the doctype",5,null],[12,"public_id","","The public ID of the doctype",5,null],[12,"system_id","","The system ID of the doctype",5,null],[3,"DocumentData","","Data specific to document nodes.",null,null],[3,"ElementData","","Data specific to element nodes.",null,null],[12,"name","","The namespace and local name of the element, such as…",6,null],[12,"attributes","","The attributes of the elements.",6,null],[12,"template_contents","","If the element is an HTML `<template>` element, the…",6,null],[3,"Node","","A node inside a DOM-like tree.",null,null],[3,"NodeRef","","A strong reference to a node.",null,null],[12,"0","","",7,null],[4,"NodeData","","Node data specific to the node type.",null,null],[13,"Element","","Element node",8,null],[13,"Text","","Text node",8,null],[13,"Comment","","Comment node",8,null],[13,"ProcessingInstruction","","Processing instruction node",8,null],[13,"Doctype","","Doctype node",8,null],[13,"Document","","Document node",8,null],[13,"DocumentFragment","","Document fragment node",8,null],[5,"parse_html","","Parse an HTML document with html5ever and the default…",null,[[],[["sink",3],["parser",3]]]],[5,"parse_html_with_options","","Parse an HTML document with html5ever with custom…",null,[[["parseopts",3]],[["sink",3],["parser",3]]]],[11,"new","","Trivial constructor",2,[[["namespace",6],["localname",6],["into",8],["into",8]]]],[11,"contains","","Like BTreeMap::contains",1,[[["localname",6],["into",8]]]],[11,"get","","Like BTreeMap::get",1,[[["localname",6],["into",8]],["option",4]]],[11,"get_mut","","Like BTreeMap::get_mut",1,[[["localname",6],["into",8]],[["string",3],["option",4]]]],[11,"entry","","Like BTreeMap::entry",1,[[["localname",6],["into",8]],[["entry",4],["attribute",3],["expandedname",3]]]],[11,"insert","","Like BTreeMap::insert",1,[[["localname",6],["into",8],["string",3]],[["option",4],["attribute",3]]]],[11,"remove","","Like BTreeMap::remove",1,[[["localname",6],["into",8]],[["option",4],["attribute",3]]]],[0,"iter","","Node iterators",null,null],[3,"Siblings","kuchiki::iter","A double-ended iterator of sibling nodes.",null,null],[3,"Ancestors","","An iterator on ancestor nodes.",null,null],[3,"Descendants","","An iterator of references to a given node and its…",null,null],[3,"Traverse","","An iterator of the start and end edges of the nodes in a…",null,null],[3,"Elements","","A node iterator adaptor that yields element nodes.",null,null],[12,"0","","",9,null],[3,"Comments","","A node iterator adaptor that yields comment nodes.",null,null],[12,"0","","",10,null],[3,"TextNodes","","A node iterator adaptor that yields text nodes.",null,null],[12,"0","","",11,null],[3,"Select","","An element iterator adaptor that yields elements maching…",null,null],[12,"iter","","The underlying iterator.",12,null],[12,"selectors","","The selectors to be matched.",12,null],[4,"NodeEdge","","Marks either the start or the end of a node.",null,null],[13,"Start","","Indicates that start of a node that has children. Yielded…",13,null],[13,"End","","Indicates that end of a node that has children. Yielded by…",13,null],[8,"NodeIterator","","Convenience methods for node iterators.",null,null],[11,"elements","","Filter this element iterator to elements.",14,[[],["elements",3]]],[11,"text_nodes","","Filter this node iterator to text nodes.",14,[[],["textnodes",3]]],[11,"comments","","Filter this node iterator to comment nodes.",14,[[],["comments",3]]],[11,"select","","Filter this node iterator to elements maching the given…",14,[[],[["result",4],["select",3]]]],[8,"ElementIterator","","Convenience methods for element iterators.",null,null],[11,"select","","Filter this element iterator to elements maching the given…",15,[[],[["result",4],["select",3]]]],[11,"inclusive_ancestors","kuchiki","Return an iterator of references to this node and its…",7,[[],["ancestors",3]]],[11,"ancestors","","Return an iterator of references to this node’s ancestors.",7,[[],["ancestors",3]]],[11,"inclusive_preceding_siblings","","Return an iterator of references to this node and the…",7,[[],[["rev",3],["siblings",3]]]],[11,"preceding_siblings","","Return an iterator of references to this node’s siblings…",7,[[],[["rev",3],["siblings",3]]]],[11,"inclusive_following_siblings","","Return an iterator of references to this node and the…",7,[[],["siblings",3]]],[11,"following_siblings","","Return an iterator of references to this node’s siblings…",7,[[],["siblings",3]]],[11,"children","","Return an iterator of references to this node’s children.",7,[[],["siblings",3]]],[11,"inclusive_descendants","","Return an iterator of references to this node and its…",7,[[],["descendants",3]]],[11,"descendants","","Return an iterator of references to this node’s…",7,[[],["descendants",3]]],[11,"traverse_inclusive","","Return an iterator of the start and end edges of this node…",7,[[],["traverse",3]]],[11,"traverse","","Return an iterator of the start and end edges of this…",7,[[],["traverse",3]]],[11,"select","","Return an iterator of the inclusive descendants element…",7,[[],[["result",4],["select",3]]]],[11,"select_first","","Return the first inclusive descendants element that match…",7,[[],[["result",4],["nodedataref",3]]]],[11,"into_element_ref","","If this node is an element, return a strong reference to…",7,[[],[["option",4],["nodedataref",3]]]],[11,"into_text_ref","","If this node is a text node, return a strong reference to…",7,[[],[["option",4],["nodedataref",3]]]],[11,"into_comment_ref","","If this node is a comment, return a strong reference to…",7,[[],[["option",4],["nodedataref",3]]]],[11,"into_doctype_ref","","If this node is a doctype, return a strong reference to…",7,[[],[["nodedataref",3],["option",4]]]],[11,"into_document_ref","","If this node is a document, return a strong reference to…",7,[[],[["option",4],["nodedataref",3]]]],[11,"new","","Create a `NodeDataRef` for a component in a given node.",16,[[["noderef",3]],["nodedataref",3]]],[11,"new_opt","","Create a `NodeDataRef` for and a component that may or may…",16,[[["noderef",3]],[["option",4],["nodedataref",3]]]],[11,"as_node","","Access the corresponding node.",16,[[],["noderef",3]]],[11,"text_contents","","Return the concatenation of all text nodes in this subtree.",16,[[],["string",3]]],[11,"compile","","Compile a list of selectors. This may fail on syntax…",4,[[],[["selectors",3],["result",4]]]],[11,"matches","","Returns whether the given element matches this list of…",4,[[["nodedataref",3]]]],[11,"filter","","Filter an element iterator, yielding those matching this…",4,[[],[["selectors",3],["select",3]]]],[11,"matches","","Returns whether the given element matches this selector.",17,[[["nodedataref",3]]]],[11,"specificity","","Return the specificity of this selector.",17,[[],["specificity",3]]],[11,"serialize","","Serialize this node and its descendants in HTML syntax to…",7,[[],["result",6]]],[11,"serialize_to_file","","Serialize this node and its descendants in HTML syntax to…",7,[[["path",3],["asref",8]],["result",6]]],[11,"quirks_mode","","The quirks mode of the document, as determined by the HTML…",18,[[],["quirksmode",4]]],[11,"new","","Create a new node.",7,[[["nodedata",4]],["noderef",3]]],[11,"new_element","","Create a new element node.",7,[[["qualname",3]],["noderef",3]]],[11,"new_text","","Create a new text node.",7,[[["into",8],["string",3]],["noderef",3]]],[11,"new_comment","","Create a new comment node.",7,[[["into",8],["string",3]],["noderef",3]]],[11,"new_processing_instruction","","Create a new processing instruction node.",7,[[],["noderef",3]]],[11,"new_doctype","","Create a new doctype node.",7,[[],["noderef",3]]],[11,"new_document","","Create a new document node.",7,[[],["noderef",3]]],[11,"text_contents","","Return the concatenation of all text nodes in this subtree.",7,[[],["string",3]]],[11,"data","","Return a reference to this node’s node-type-specific data.",19,[[],["nodedata",4]]],[11,"as_element","","If this node is an element, return a reference to…",19,[[],[["elementdata",3],["option",4]]]],[11,"as_text","","If this node is a text node, return a reference to its…",19,[[],[["refcell",3],["option",4]]]],[11,"as_comment","","If this node is a comment, return a reference to its…",19,[[],[["refcell",3],["option",4]]]],[11,"as_doctype","","If this node is a document, return a reference to…",19,[[],[["option",4],["doctype",3]]]],[11,"as_document","","If this node is a document, return a reference to…",19,[[],[["documentdata",3],["option",4]]]],[11,"parent","","Return a reference to the parent node, unless this node is…",19,[[],[["noderef",3],["option",4]]]],[11,"first_child","","Return a reference to the first child of this node, unless…",19,[[],[["noderef",3],["option",4]]]],[11,"last_child","","Return a reference to the last child of this node, unless…",19,[[],[["noderef",3],["option",4]]]],[11,"previous_sibling","","Return a reference to the previous sibling of this node,…",19,[[],[["noderef",3],["option",4]]]],[11,"next_sibling","","Return a reference to the previous sibling of this node,…",19,[[],[["noderef",3],["option",4]]]],[11,"detach","","Detach a node from its parent and siblings. Children are…",19,[[]]],[11,"append","","Append a new child to this node, after existing children.",7,[[["noderef",3]]]],[11,"prepend","","Prepend a new child to this node, before existing children.",7,[[["noderef",3]]]],[11,"insert_after","","Insert a new sibling after this node.",7,[[["noderef",3]]]],[11,"insert_before","","Insert a new sibling before this node.",7,[[["noderef",3]]]],[0,"traits","","This module re-exports a number of traits that are useful…",null,null],[8,"TendrilSink","kuchiki::traits","Trait for types that can process a tendril.",null,null],[10,"process","","Process this tendril.",20,[[["tendril",3]]]],[10,"error","","Indicates that an error has occurred.",20,[[["cow",4]]]],[16,"Output","","What the overall result of processing is.",20,null],[10,"finish","","Indicates the end of the stream.",20,[[]]],[11,"one","","Process one tendril and finish.",20,[[]]],[11,"from_iter","","Consume an iterator of tendrils, processing each item,…",20,[[]]],[11,"read_from","","Read from the given stream of bytes until exhaustion and…",20,[[],[["result",4],["error",3]]]],[11,"from_file","","Read from the file at the given path and process…",20,[[],[["result",4],["error",3]]]],[11,"from","kuchiki","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","kuchiki::iter","",22,[[]]],[11,"into","","",22,[[]]],[11,"into_iter","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"into_iter","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"into_iter","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"into_iter","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"drop","kuchiki","",19,[[]]],[11,"next_back","kuchiki::iter","",22,[[],[["noderef",3],["option",4]]]],[11,"next_back","","",24,[[],[["noderef",3],["option",4]]]],[11,"next_back","","",25,[[],[["nodeedge",4],["option",4]]]],[11,"next_back","","",9,[[],[["option",4],["nodedataref",3]]]],[11,"next_back","","",10,[[],[["option",4],["nodedataref",3]]]],[11,"next_back","","",11,[[],[["option",4],["nodedataref",3]]]],[11,"next_back","","",12,[[],[["option",4],["nodedataref",3]]]],[11,"next","","",22,[[],[["noderef",3],["option",4]]]],[11,"next","","",23,[[],[["noderef",3],["option",4]]]],[11,"next","","",24,[[],[["noderef",3],["option",4]]]],[11,"next","","",25,[[],[["nodeedge",4],["option",4]]]],[11,"next","","",9,[[],[["option",4],["nodedataref",3]]]],[11,"next","","",10,[[],[["option",4],["nodedataref",3]]]],[11,"next","","",11,[[],[["option",4],["nodedataref",3]]]],[11,"next","","",12,[[],[["option",4],["nodedataref",3]]]],[11,"clone","kuchiki","",1,[[],["attributes",3]]],[11,"clone","","",2,[[],["expandedname",3]]],[11,"clone","","",0,[[],["attribute",3]]],[11,"clone","kuchiki::iter","",22,[[],["siblings",3]]],[11,"clone","","",23,[[],["ancestors",3]]],[11,"clone","","",24,[[],["descendants",3]]],[11,"clone","","",13,[[],["nodeedge",4]]],[11,"clone","","",25,[[],["traverse",3]]],[11,"clone","","",9,[[],["elements",3]]],[11,"clone","","",10,[[],["comments",3]]],[11,"clone","","",11,[[],["textnodes",3]]],[11,"clone","kuchiki","",16,[[]]],[11,"clone","","",21,[[],["specificity",3]]],[11,"clone","","",8,[[],["nodedata",4]]],[11,"clone","","",5,[[],["doctype",3]]],[11,"clone","","",6,[[],["elementdata",3]]],[11,"clone","","",18,[[],["documentdata",3]]],[11,"clone","","",7,[[],["noderef",3]]],[11,"default","","",3,[[],["parseopts",3]]],[11,"cmp","","",2,[[["expandedname",3]],["ordering",4]]],[11,"cmp","","",21,[[["specificity",3]],["ordering",4]]],[11,"eq","","",1,[[["attributes",3]]]],[11,"ne","","",1,[[["attributes",3]]]],[11,"eq","","",2,[[["expandedname",3]]]],[11,"ne","","",2,[[["expandedname",3]]]],[11,"eq","","",0,[[["attribute",3]]]],[11,"ne","","",0,[[["attribute",3]]]],[11,"eq","kuchiki::iter","",13,[[["nodeedge",4]]]],[11,"ne","","",13,[[["nodeedge",4]]]],[11,"eq","kuchiki","",16,[[]]],[11,"eq","","",21,[[["specificity",3]]]],[11,"ne","","",21,[[["specificity",3]]]],[11,"eq","","",8,[[["nodedata",4]]]],[11,"ne","","",8,[[["nodedata",4]]]],[11,"eq","","",5,[[["doctype",3]]]],[11,"ne","","",5,[[["doctype",3]]]],[11,"eq","","",6,[[["elementdata",3]]]],[11,"ne","","",6,[[["elementdata",3]]]],[11,"eq","","",18,[[["documentdata",3]]]],[11,"ne","","",18,[[["documentdata",3]]]],[11,"eq","","",7,[[["noderef",3]]]],[11,"partial_cmp","","",2,[[["expandedname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["expandedname",3]]]],[11,"le","","",2,[[["expandedname",3]]]],[11,"gt","","",2,[[["expandedname",3]]]],[11,"ge","","",2,[[["expandedname",3]]]],[11,"partial_cmp","","",21,[[["specificity",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["specificity",3]]]],[11,"le","","",21,[[["specificity",3]]]],[11,"gt","","",21,[[["specificity",3]]]],[11,"ge","","",21,[[["specificity",3]]]],[11,"to_string","","",7,[[],["string",3]]],[11,"deref","","",16,[[]]],[11,"deref","","",7,[[],["node",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","kuchiki::iter","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","kuchiki","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",21,[[]]],[11,"from_str","","",4,[[],[["selectors",3],["result",4]]]],[11,"serialize","","",7,[[["traversalscope",4]],["result",6]]],[11,"opaque","","",16,[[],["opaqueelement",3]]],[11,"is_html_slot_element","","",16,[[]]],[11,"parent_node_is_shadow_root","","",16,[[]]],[11,"containing_shadow_host","","",16,[[],["option",4]]],[11,"parent_element","","",16,[[],["option",4]]],[11,"prev_sibling_element","","",16,[[],["option",4]]],[11,"next_sibling_element","","",16,[[],["option",4]]],[11,"is_empty","","",16,[[]]],[11,"is_root","","",16,[[]]],[11,"is_html_element_in_html_document","","",16,[[]]],[11,"has_local_name","","",16,[[["localname",6]]]],[11,"has_namespace","","",16,[[["namespace",6]]]],[11,"is_part","","",16,[[["localname",6]]]],[11,"exported_part","","",16,[[["localname",6]],[["localname",6],["option",4]]]],[11,"imported_part","","",16,[[["localname",6]],[["localname",6],["option",4]]]],[11,"is_pseudo_element","","",16,[[]]],[11,"is_same_type","","",16,[[]]],[11,"is_link","","",16,[[]]],[11,"has_id","","",16,[[["localname",6],["casesensitivity",4]]]],[11,"has_class","","",16,[[["localname",6],["casesensitivity",4]]]],[11,"attr_matches","","",16,[[["attrselectoroperation",4],["localname",6],["namespaceconstraint",4]]]],[11,"match_pseudo_element","","",16,[[["pseudoelement",4],["matchingcontext",3]]]],[11,"match_non_ts_pseudo_class","","",16,[[["pseudoclass",4],["matchingcontext",3]]]]],"p":[[3,"Attribute"],[3,"Attributes"],[3,"ExpandedName"],[3,"ParseOpts"],[3,"Selectors"],[3,"Doctype"],[3,"ElementData"],[3,"NodeRef"],[4,"NodeData"],[3,"Elements"],[3,"Comments"],[3,"TextNodes"],[3,"Select"],[4,"NodeEdge"],[8,"NodeIterator"],[8,"ElementIterator"],[3,"NodeDataRef"],[3,"Selector"],[3,"DocumentData"],[3,"Node"],[8,"TendrilSink"],[3,"Specificity"],[3,"Siblings"],[3,"Ancestors"],[3,"Descendants"],[3,"Traverse"]]},\
"log":{"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \\\"payload\\\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",null,null],[3,"ParseLevelError","","The type returned by `from_str` when the string doesn\'t…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \\\"error\\\" level.",0,null],[13,"Warn","","The \\\"warn\\\" level.",0,null],[13,"Info","","The \\\"info\\\" level.",0,null],[13,"Debug","","The \\\"debug\\\" level.",0,null],[13,"Trace","","The \\\"trace\\\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter",4]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter",4]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["box",3],["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger","","Sets the global logger to a `&\'static Log`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"set_logger_racy","","A thread-unsafe version of `set_logger`.",null,[[["log",8]],[["result",4],["setloggererror",3]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log",8]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["metadata",3]]]],[10,"log","","Logs the `Record`.",2,[[["record",3]]]],[10,"flush","","Flushes any buffered records.",2,[[]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level",4]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[],["levelfilter",4]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter",4]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[],[["option",4],["level",4]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder",3]]],[11,"args","","The message body.",3,[[],["arguments",3]]],[11,"metadata","","Metadata about the log directive.",3,[[],["metadata",3]]],[11,"level","","The verbosity level of the message.",3,[[],["level",4]]],[11,"target","","The name of the target of the directive.",3,[[]]],[11,"module_path","","The module path of the message.",3,[[],["option",4]]],[11,"module_path_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"file","","The source file containing the message.",3,[[],["option",4]]],[11,"file_static","","The module path of the message, if it is a `\'static` string.",3,[[],["option",4]]],[11,"line","","The line containing the message.",3,[[],["option",4]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder",3]]],[11,"args","","Set `args`.",4,[[["arguments",3]],["recordbuilder",3]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["metadata",3]],["recordbuilder",3]]],[11,"level","","Set `Metadata::level`.",4,[[["level",4]],["recordbuilder",3]]],[11,"target","","Set `Metadata::target`",4,[[],["recordbuilder",3]]],[11,"module_path","","Set `module_path`",4,[[["option",4]],["recordbuilder",3]]],[11,"module_path_static","","Set `module_path` to a `\'static` string",4,[[["option",4]],["recordbuilder",3]]],[11,"file","","Set `file`",4,[[["option",4]],["recordbuilder",3]]],[11,"file_static","","Set `file` to a `\'static` string.",4,[[["option",4]],["recordbuilder",3]]],[11,"line","","Set `line`",4,[[["option",4]],["recordbuilder",3]]],[11,"build","","Invoke the builder and return a `Record`",4,[[],["record",3]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder",3]]],[11,"level","","The verbosity level of the message.",5,[[],["level",4]]],[11,"target","","The name of the target of the directive.",5,[[]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder",3]]],[11,"level","","Setter for `level`.",6,[[["level",4]],["metadatabuilder",3]]],[11,"target","","Setter for `target`.",6,[[],["metadatabuilder",3]]],[11,"build","","Returns a `Metadata` object.",6,[[],["metadata",3]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"clone","","",0,[[],["level",4]]],[11,"clone","","",1,[[],["levelfilter",4]]],[11,"clone","","",3,[[],["record",3]]],[11,"clone","","",5,[[],["metadata",3]]],[11,"cmp","","",0,[[["level",4]],["ordering",4]]],[11,"cmp","","",1,[[["levelfilter",4]],["ordering",4]]],[11,"cmp","","",5,[[["metadata",3]],["ordering",4]]],[11,"cmp","","",6,[[["metadatabuilder",3]],["ordering",4]]],[11,"eq","","",0,[[["level",4]]]],[11,"eq","","",0,[[["levelfilter",4]]]],[11,"eq","","",1,[[["levelfilter",4]]]],[11,"eq","","",1,[[["level",4]]]],[11,"eq","","",5,[[["metadata",3]]]],[11,"ne","","",5,[[["metadata",3]]]],[11,"eq","","",6,[[["metadatabuilder",3]]]],[11,"ne","","",6,[[["metadatabuilder",3]]]],[11,"eq","","",8,[[["parselevelerror",3]]]],[11,"ne","","",8,[[["parselevelerror",3]]]],[11,"partial_cmp","","",0,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["level",4]]]],[11,"le","","",0,[[["level",4]]]],[11,"gt","","",0,[[["level",4]]]],[11,"ge","","",0,[[["level",4]]]],[11,"partial_cmp","","",0,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["levelfilter",4]]]],[11,"le","","",0,[[["levelfilter",4]]]],[11,"gt","","",0,[[["levelfilter",4]]]],[11,"ge","","",0,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["levelfilter",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["levelfilter",4]]]],[11,"le","","",1,[[["levelfilter",4]]]],[11,"gt","","",1,[[["levelfilter",4]]]],[11,"ge","","",1,[[["levelfilter",4]]]],[11,"partial_cmp","","",1,[[["level",4]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["level",4]]]],[11,"le","","",1,[[["level",4]]]],[11,"gt","","",1,[[["level",4]]]],[11,"ge","","",1,[[["level",4]]]],[11,"partial_cmp","","",5,[[["metadata",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["metadata",3]]]],[11,"le","","",5,[[["metadata",3]]]],[11,"gt","","",5,[[["metadata",3]]]],[11,"ge","","",5,[[["metadata",3]]]],[11,"partial_cmp","","",6,[[["metadatabuilder",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["metadatabuilder",3]]]],[11,"le","","",6,[[["metadatabuilder",3]]]],[11,"gt","","",6,[[["metadatabuilder",3]]]],[11,"ge","","",6,[[["metadatabuilder",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"from_str","","",0,[[],[["result",4],["level",4]]]],[11,"from_str","","",1,[[],[["levelfilter",4],["result",4]]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]},\
"rand_core":{"doc":"Random number generation traits","i":[[3,"Error","rand_core","Error type of random number generators",null,null],[3,"OsRng","","A random number generator that retrieves randomness from…",null,null],[11,"new","","Construct from any type supporting `std::error::Error`",0,[[]]],[11,"inner","","Reference the inner error (`std` only)",0,[[],["error",8]]],[11,"take_inner","","Unwrap the inner error (`std` only)",0,[[],[["box",3],["error",8]]]],[18,"INTERNAL_START","","Codes below this point represent OS Errors (i.e. positive…",0,null],[18,"CUSTOM_START","","Codes at or above this point can be used by users to…",0,null],[11,"raw_os_error","","Extract the raw OS error code (if this error came from the…",0,[[],["option",4]]],[11,"code","","Retrieve the error code, if any.",0,[[],[["option",4],["nonzerou32",3]]]],[0,"block","","The `BlockRngCore` trait and implementation helpers",null,null],[3,"BlockRng","rand_core::block","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",1,null],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type…",null,null],[12,"core","","The core part of the RNG, implementing the `generate`…",2,null],[8,"BlockRngCore","","A trait for RNGs which do not generate random numbers…",null,null],[16,"Item","","Results element type, e.g. `u32`.",3,null],[16,"Results","","Results type. This is the \'block\' an RNG implementing…",3,null],[10,"generate","","Generate a new block of results.",3,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",1,[[],["blockrng",3]]],[11,"index","","Get the index into the result buffer.",1,[[]]],[11,"reset","","Reset the number of available results. This will force a…",1,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",1,[[]]],[11,"new","","Create a new `BlockRng` from an existing RNG implementing…",2,[[],["blockrng64",3]]],[11,"index","","Get the index into the result buffer.",2,[[]]],[11,"reset","","Reset the number of available results. This will force a…",2,[[]]],[11,"generate_and_set","","Generate a new set of results immediately, setting the…",2,[[]]],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",null,null],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",null,[[]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`,…",null,[[]]],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output…",null,[[]]],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",null,[[]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",null,[[]]],[0,"le","rand_core","Little-Endian utilities",null,null],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`.…",null,[[]]],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.…",null,[[]]],[8,"RngCore","rand_core","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random `u32`.",4,[[]]],[10,"next_u64","","Return the next random `u64`.",4,[[]]],[10,"fill_bytes","","Fill `dest` with random data.",4,[[]]],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",4,[[],[["result",4],["error",3]]]],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or…",null,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types…",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",5,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via `getrandom`.",5,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","rand_core::block","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"next_u32","","",1,[[]]],[11,"next_u64","","",1,[[]]],[11,"fill_bytes","","",1,[[]]],[11,"try_fill_bytes","","",1,[[],[["result",4],["error",3]]]],[11,"next_u32","","",2,[[]]],[11,"next_u64","","",2,[[]]],[11,"fill_bytes","","",2,[[]]],[11,"try_fill_bytes","","",2,[[],[["result",4],["error",3]]]],[11,"next_u32","rand_core","",6,[[]]],[11,"next_u64","","",6,[[]]],[11,"fill_bytes","","",6,[[]]],[11,"try_fill_bytes","","",6,[[],[["result",4],["error",3]]]],[11,"from_seed","rand_core::block","",1,[[]]],[11,"seed_from_u64","","",1,[[]]],[11,"from_rng","","",1,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from_seed","","",2,[[]]],[11,"seed_from_u64","","",2,[[]]],[11,"from_rng","","",2,[[["rngcore",8]],[["error",3],["result",4]]]],[11,"from","rand_core","",0,[[["nonzerou32",3]]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","rand_core::block","",1,[[],["blockrng",3]]],[11,"clone","","",2,[[],["blockrng64",3]]],[11,"clone","rand_core","",6,[[],["osrng",3]]],[11,"default","","",6,[[],["osrng",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core::block","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rand_core","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"read","","",4,[[],[["error",3],["result",4]]]]],"p":[[3,"Error"],[3,"BlockRng"],[3,"BlockRng64"],[8,"BlockRngCore"],[8,"RngCore"],[8,"SeedableRng"],[3,"OsRng"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);